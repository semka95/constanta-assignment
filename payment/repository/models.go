// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0

package repository

import (
	"fmt"
	"time"

	"github.com/shopspring/decimal"
)

type ValidCurrency string

const (
	ValidCurrencyUsd ValidCurrency = "usd"
	ValidCurrencyEur ValidCurrency = "eur"
	ValidCurrencyRub ValidCurrency = "rub"
)

func (e *ValidCurrency) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ValidCurrency(s)
	case string:
		*e = ValidCurrency(s)
	default:
		return fmt.Errorf("unsupported scan type for ValidCurrency: %T", src)
	}
	return nil
}

type ValidStatus string

const (
	ValidStatusNew     ValidStatus = "new"
	ValidStatusSuccess ValidStatus = "success"
	ValidStatusFailure ValidStatus = "failure"
	ValidStatusError   ValidStatus = "error"
)

func (e *ValidStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ValidStatus(s)
	case string:
		*e = ValidStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for ValidStatus: %T", src)
	}
	return nil
}

type Payment struct {
	ID            int64           `json:"id"`
	UserID        int64           `json:"user_id"`
	Email         string          `json:"email"`
	Amount        decimal.Decimal `json:"amount"`
	Currency      ValidCurrency   `json:"currency"`
	PaymentStatus ValidStatus     `json:"payment_status"`
	CreatedAt     time.Time       `json:"created_at"`
	UpdatedAt     time.Time       `json:"updated_at"`
}
